"use strict";(self.webpackChunkhasura_extra_github_io=self.webpackChunkhasura_extra_github_io||[]).push([[257],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,f=m["".concat(c,".").concat(d)]||m[d]||l[d]||o;return a?n.createElement(f,s(s({ref:t},u),{},{components:a})):n.createElement(f,s({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},365:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),s=["components"],i={id:"state-processor-metadata",title:"State processor",sidebar_title:"State processor"},c=void 0,p={unversionedId:"manage-metadata/state-processor-metadata",id:"manage-metadata/state-processor-metadata",isDocsHomePage:!1,title:"State processor",description:"State processor s\u1ebd g\xf3p ph\u1ea7n process application state) c\u1ee7a b\u1ea1n l\xean Hasura.",source:"@site/i18n/vi/docusaurus-plugin-content-docs/current/07-manage-metadata/08-state-processor.md",sourceDirName:"07-manage-metadata",slug:"/manage-metadata/state-processor-metadata",permalink:"/vi/manage-metadata/state-processor-metadata",editUrl:"https://github.com/hasura-extra/hasura-extra/edit/main/docusaurus/i18n/vi/docusaurus-plugin-content-docs/current/07-manage-metadata/08-state-processor.md",tags:[],version:"current",lastUpdatedBy:"Minh Vuong",lastUpdatedAt:1637776940,formattedLastUpdatedAt:"24/11/2021",sidebarPosition:8,frontMatter:{id:"state-processor-metadata",title:"State processor",sidebar_title:"State processor"},sidebar:"main",previous:{title:"Persist application state",permalink:"/vi/manage-metadata/persist-application-state-metadata"}},u=[{value:"\u0110\u1ed1i v\u1edbi Symfony users",id:"\u0111\u1ed1i-v\u1edbi-symfony-users",children:[],level:2}],l={toc:u};function m(e){var t=e.components,a=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"State processor s\u1ebd g\xf3p ph\u1ea7n ",(0,o.kt)("inlineCode",{parentName:"p"},"process")," application ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/State_(computer_science)"},"state")," c\u1ee7a b\u1ea1n l\xean Hasura. "),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"\u0110\xe2y l\xe0 t\xednh n\u0103ng n\xe2ng cao d\xe0nh cho nh\u1eefng ai mu\u1ed1n x\xe2y d\u1ef1ng c\xe1c processors ri\xeang g\xf3p ph\u1ea7n khi th\u1ef1c thi ",(0,o.kt)("a",{parentName:"p",href:"/vi/manage-metadata/persist-application-state-metadata"},"persist application state"),"."))),(0,o.kt)("h2",{id:"\u0111\u1ed1i-v\u1edbi-symfony-users"},"\u0110\u1ed1i v\u1edbi Symfony users"),(0,o.kt)("p",null,"Bundle \u0111\xe3 c\u1ea5u h\xecnh s\u1eb5n ",(0,o.kt)("a",{parentName:"p",href:"https://symfony.com/doc/current/service_container.html#the-autoconfigure-option"},"auto configuration")," d\xe0nh cho ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/hasura-extra/metadata/blob/main/src/StateProcessorInterface.php"},"StateProcessorInterface"),", khi\nclass c\u1ee7a b\u1ea1n implements interface tr\xean th\xec khi th\u1ef1c hi\u1ec7n ",(0,o.kt)("a",{parentName:"p",href:"/vi/manage-metadata/persist-application-state-metadata"},"persist application state")," n\xf3 s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi k\xe8m, v\xed d\u1ee5:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"use Hasura\\Metadata\\StateProcessorInterface;\n\nfinal class ReloadStateProcessor implements StateProcessorInterface\n{\n    public function process(ManagerInterface $manager, bool $allowInconsistent = false): void\n    {\n        $manager->reload(true, true);\n    }\n}\n")),(0,o.kt)("p",null,"Theo v\xed d\u1ee5 tr\xean, reload state processor s\u1ebd th\u1ef1c hi\u1ec7n reload local remote schema SDL (n\u1ebfu c\xf3)."))}m.isMDXComponent=!0}}]);