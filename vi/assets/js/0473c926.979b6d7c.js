"use strict";(self.webpackChunkhasura_extra_github_io=self.webpackChunkhasura_extra_github_io||[]).push([[143],{3905:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return l}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),u=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},m=function(t){var e=u(t.components);return a.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,s=t.parentName,m=c(t,["components","mdxType","originalType","parentName"]),d=u(n),l=r,f=d["".concat(s,".").concat(l)]||d[l]||p[l]||i;return n?a.createElement(f,o(o({ref:e},m),{},{components:n})):a.createElement(f,o({ref:e},m))}));function l(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:r,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9070:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return m},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],c={id:"drop-inconsistent-metadata",title:"Drop inconsistent",sidebar_title:"Drop inconsistent"},s=void 0,u={unversionedId:"manage-metadata/drop-inconsistent-metadata",id:"manage-metadata/drop-inconsistent-metadata",isDocsHomePage:!1,title:"Drop inconsistent",description:"Drop inconsistent metadata s\u1ebd gi\xfap b\u1ea1n x\xf3a \u0111i c\xe1c c\u1ea5u h\xecnh metadata kh\xf4ng h\u1ee3p l\u1ec7 (table column kh\xf4ng t\u1ed3n t\u1ea1i ho\u1eb7c remote schema field kh\xf4ng t\u1ed3n t\u1ea1i...),",source:"@site/i18n/vi/docusaurus-plugin-content-docs/current/07-manage-metadata/05-drop-inconsistent-metadata.md",sourceDirName:"07-manage-metadata",slug:"/manage-metadata/drop-inconsistent-metadata",permalink:"/vi/manage-metadata/drop-inconsistent-metadata",editUrl:"https://github.com/hasura-extra/hasura-extra/edit/main/docusaurus/i18n/vi/docusaurus-plugin-content-docs/current/07-manage-metadata/05-drop-inconsistent-metadata.md",tags:[],version:"current",lastUpdatedBy:"Minh Vuong",lastUpdatedAt:1637776940,formattedLastUpdatedAt:"24/11/2021",sidebarPosition:5,frontMatter:{id:"drop-inconsistent-metadata",title:"Drop inconsistent",sidebar_title:"Drop inconsistent"},sidebar:"main",previous:{title:"Get inconsistent metadata",permalink:"/vi/manage-metadata/get-inconsistent-metadata"},next:{title:"Clear metadata",permalink:"/vi/manage-metadata/clear-metadata"}},m=[{value:"\u0110\u1ed1i v\u1edbi Symfony users",id:"\u0111\u1ed1i-v\u1edbi-symfony-users",children:[],level:2}],p={toc:m};function d(t){var e=t.components,n=(0,r.Z)(t,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Drop inconsistent metadata s\u1ebd gi\xfap b\u1ea1n x\xf3a \u0111i c\xe1c c\u1ea5u h\xecnh metadata kh\xf4ng h\u1ee3p l\u1ec7 (table column kh\xf4ng t\u1ed3n t\u1ea1i ho\u1eb7c remote schema field kh\xf4ng t\u1ed3n t\u1ea1i...),\ntr\u01b0\u1edbc khi drop, ch\xfang t\xf4i khuy\xean b\u1ea1n n\xean xem l\u1ea1i c\xe1c c\u1ea5u h\xecnh s\u1ebd b\u1ecb drop th\xf4ng qua t\xe0i li\u1ec7u ",(0,i.kt)("a",{parentName:"p",href:"/vi/manage-metadata/get-inconsistent-metadata"},"get inconsistent metadata"),"."),(0,i.kt)("h2",{id:"\u0111\u1ed1i-v\u1edbi-symfony-users"},"\u0110\u1ed1i v\u1edbi Symfony users"),(0,i.kt)("p",null,"\u0110\u1ec3 drop c\xe1c inconsistent metadata b\u1ea1n c\u1ea7n th\u1ef1c thi Symfony command sau:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"php bin/console hasura:metadata:drop-inconsistent\n")),(0,i.kt)("p",null,"Command tr\xean s\u1ebd drop t\u1ea5t c\u1ea3 inconsistent metadata."))}d.isMDXComponent=!0}}]);